@using JustBlog.Web.Views.Shared.Components.CategorySidebar

@model IEnumerable<JustBlog.ViewModels.EntityViewModels.ListPostVM>

@{ ViewData["Title"] = "Index";
    Layout = "_Layout"; }
@foreach (var item in Model)
{<!-- Post preview-->
                    <div class="post-preview">
                        <a asp-action="Details" asp-route-year="@item.PostedOn.Year"
                           asp-route-month="@item.PostedOn.Month" asp-route-urlSlug="@item.UrlSlug">
                            <h2 class="post-title">
                                @Html.DisplayFor(modelItem => item.Title)
                            </h2>
                        </a>
                        <p class="post-meta">
                            Posted by
                            <a href="#!">Start Bootstrap</a>
                            @Html.DisplayFor(modelItem => item.PostedOn)
                        </p>
                        <p class="post-meta">
                            @Html.Raw(item.ShortDescription)
                        </p>
                    </div>
                    <div>
                        Category
                        <a href="#">
                            <u>  @Html.DisplayFor(modeltem => item.Category.Name) </u>
                        </a>
                    </div>
                    <div>Tag 
                        <a href="#">
                            <u>@string.Join(", ", item.PostTagMaps.Select(pt => pt.Tag.Name))</u>
                        </a>
                    </div>
                     <hr class="my-4" />
}

<partial name="_paging" model="@ViewBag.pagingModel" />
<!-- Pager-->
@section CategorySidebar {
    @{
                        @await Component.InvokeAsync(CategorySidebar.COMPONENTNAME,
                            new CategorySidebar.CategorySidebarData()
                            {
                                Categories = ViewBag.categories
                            }); }
}